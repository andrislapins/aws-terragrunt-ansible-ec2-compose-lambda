---
- name: Install Docker on Ubuntu
  hosts: localhost
  become: yes
  tasks:

    - name: Install apt dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add Docker APT repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update APT package index
      apt:
        update_cache: yes

    - name: Install Docker CE
      apt:
        name: docker-ce
        state: present

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: restarted
        enabled: yes

    - name: Add current user to Docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Display Docker version
      command: docker -v
      register: docker_version_output

    - name: Print Docker version
      debug:
        msg: "{{ docker_version_output.stdout }}"
    
    - name: Run Docker Compose up in the background
      shell: docker compose up -d
      args:
        chdir: /home/ubuntu

    - name: Check Docker Compose services
      command: docker compose ps
      args:
        chdir: /home/ubuntu
      register: docker_compose_ps_output

    - name: Print Docker Compose services status
      debug:
        msg: "{{ docker_compose_ps_output.stdout }}"